<div class="row">
	<div class="col-xs-3">
		<%- partial('../partials/nav-left') %>
	</div>
	<div class="col-xs-9">
		<div class="row">
			<div class="col-xs-12 well">
				<a href="javascript:void(0)" class="btn btn-default" onclick="logs.url = '/logs'; logs.fetch({reset:true})">Open and Closed Logs</a>
				<a href="javascript:void(0)" class="btn btn-default" onclick="logs.url = '/logs?closed=false'; logs.fetch({reset:true})">Open Logs</a>
			</div>
		</div>
		<div class="row">
			<div class="col-xs-12 content">
				<div class="well well-sm">
					<a href="javascript:logs.fetch()">load more...</a>
				</div>
			</div>
		</div>
	</div>
</div>

<script type="text/template" id="LogViewTemplate">
	<%- partial('../partials/log-view') %>
</script>

<script type="text/template" id="ProjectViewTemplate">
	<%- partial('../partials/project-view') %>
</script>

<script type="text/javascript" charset="utf-8">

	var logs = new App.Collection.Log(),
		$content = $('.content'), socket = io.connect()

	logs.view = (new (Backbone.View.extend()));

	logs.url = '/logs/feed?closed=false';

	logs.on('reset', function(collection, model) {
		logs.view.$el.empty();
		_.each(collection.models, function(model) {
			$(new App.View.Log({template: _.template($('#LogViewTemplate').html(), null, {variable: 'Log'}), model: model}).render().el).appendTo(logs.view.$el)
		});
		$content.html(logs.view.$el);
	});

	logs.on('add', function(model, collection) {
		$(new App.View.Log({template: _.template($('#LogViewTemplate').html(), null, {variable: 'Log'}), model: model}).render().el).prependTo($content)
	});

	logs.on('remove', function(model, collection) {
		model.view.remove()
	});

	socket.on('connect', function socketConnected() {
		socket.on('message', function messageReceived(message) {
			if (message.verb === 'create') {
				logs.add(message.data)
			} else if (message.verb === 'update') {
				if (logs.get(message.data.id)) {
					logs.get(message.data.id).set(message.data)
				}
			}
		});
	});

	logs.on('change', function(model) {
		var removed, changed;
		if (model.get('closed') && logs.url === '/logs/open') {
			logs.remove(model);
			model.view.remove();
		} else {
			model.view.render();
		}
		if (!model.get('closed') && model.previous('closed')) {
			logs.add(model);
		}
	});

	logs.reset(<%- JSON.stringify(logs) %>);

	socket.get('/logs?closed=false', {}, function(response) {});

</script>