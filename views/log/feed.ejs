<div class="row">
	<div class="col-xs-3">
		<%- partial('../partials/nav-left') %>
	</div>
	<div class="col-xs-9">
		<div class="row">
			<div class="col-xs-12 content feed-content">
				<div class="well well-sm">
					<a href="javascript:logs.fetch()">load more...</a>
				</div>
			</div>
		</div>
	</div>
</div>

<script type="text/template" id="LogViewTemplate">
	<%- partial('../partials/log-view') %>
</script>

<script type="text/javascript" charset="utf-8">
	
	require(['jquery', 'backbone', 'collections/log', 'models/feedui', 'views/log', 'Router', 'views/feedui'], function($, Backbone, LogCollection, FeedUIModel, LogView, Router, FeedUIView) {

		var logs = new LogCollection(),
			$content = $('.content'), socket = io.connect(),
			feedModel = new FeedUIModel(<%- JSON.stringify(req.params.all()) %>);

		window.router = Router;

		logs.view = (new (Backbone.View.extend()));

		logs.url = '/logs';

		logs.on('reset', function(collection, model) {
			logs.view.$el.empty();
			_.each(collection.models, function(model) {
				$(new LogView({template: _.template($('#LogViewTemplate').html(), null, {variable: 'Log'}), model: model}).render().el).appendTo(logs.view.$el)
			});
			$content.html(logs.view.$el);
			new FeedUIView({feed: logs});
		});

		logs.on('add', function(model, collection) {
			$(new LogView({template: _.template($('#LogViewTemplate').html(), null, {variable: 'Log'}), model: model}).render().el).prependTo($content)
		});

		logs.on('remove', function(model, collection) {
			model.view.remove()
		});

		socket.on('connect', function socketConnected() {
			socket.on('message', function messageReceived(message) {
				if (message.verb === 'create') {
					logs.add(message.data)
				} else if (message.verb === 'update') {
					if (logs.get(message.data.id)) {
						logs.get(message.data.id).set(message.data)
					}
				}
			});
		});

		logs.on('change', function(model) {
			var removed, changed;
			if (model.get('closed') && logs.url === '/logs/open') {
				logs.remove(model);
				model.view.remove();
			} else {
				model.view.render({animate: false});
			}
			if (!model.get('closed') && model.previous('closed')) {
				logs.add(model);
			}
		});

		logs.reset(<%- JSON.stringify(logs) %>);

		socket.get('/feed', {}, function(response) {});
	});

</script>